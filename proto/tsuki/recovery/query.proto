syntax = "proto3";
package tsuki.recovery;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "tsuki/recovery/recovery.proto";

option go_package = "github.com/TsukiCore/tsuki/x/recovery/types";

// Query defines the gRPC querier service.
service Query {
  // given TSUKI public address as parameter return data from the recovery registrar
  rpc RecoveryRecord(QueryRecoveryRecordRequest) returns (QueryRecoveryRecordResponse) {
    option (google.api.http).get = "/tsuki/recovery/v1beta1/recovery_record/{address}";
  }
  rpc RecoveryToken(QueryRecoveryTokenRequest) returns (QueryRecoveryTokenResponse) {
    option (google.api.http).get = "/tsuki/recovery/v1beta1/recovery_token/{address}";
  }
}

message QueryRecoveryRecordRequest {
    string address = 1;
}

message QueryRecoveryRecordResponse {
  tsuki.recovery.RecoveryRecord record = 1 [(gogoproto.nullable) = false];
}

message QueryRecoveryTokenRequest {
    string address = 1;
}

message QueryRecoveryTokenResponse {
  tsuki.recovery.RecoveryToken token = 1 [ (gogoproto.nullable) = false ];
}
